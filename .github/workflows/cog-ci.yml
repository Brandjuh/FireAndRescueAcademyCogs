name: Cog QA

on:
  pull_request:
    paths:
      - "**/*.py"
      - "**/info.json"
      - "scripts/**"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "requirements*.txt"
  push:
    branches: [ main ]
    paths:
      - "**/*.py"
      - "**/info.json"
      - "scripts/**"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "requirements*.txt"

permissions:
  contents: read

env:
  # Zet je cogs in de root? Laat COG_BASE op "."
  # Heb je een map cogs/? Zet COG_BASE dan op "cogs"
  COG_BASE: "."

jobs:
  detect-changes:
    name: Detect changed cogs
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      any_changed: ${{ steps.set-matrix.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set-matrix
        shell: bash
        run: |
          set -e

          list_cogs() {
            # Een "cog" = map op topniveau onder COG_BASE met __init__.py of info.json
            find "${COG_BASE}" -maxdepth 1 -mindepth 1 -type d \
              \( -exec test -f "{}/__init__.py" \; -o -exec test -f "{}/info.json" \; \) \
              -print | sort
          }

          BASE_REF="${{ github.event.pull_request.base.sha || github.event.before }}"
          HEAD_REF="${{ github.sha }}"

          # Haal gewijzigde paden op, reduceer tot top-level mapnamen
          CHANGED=$(git diff --name-only "$BASE_REF" "$HEAD_REF" -- "${COG_BASE}/" \
            | awk -F/ '{print $1}' | sort -u || true)

          # Filter naar echte cog-mappen
          CHANGED_COGS=""
          for d in $CHANGED; do
            if [ -d "$d" ] && { [ -f "$d/__init__.py" ] || [ -f "$d/info.json" ]; }; then
              CHANGED_COGS="$CHANGED_COGS
$d"
            fi
          done
          CHANGED_COGS=$(echo "$CHANGED_COGS" | sed '/^$/d' || true)

          if [ -z "$CHANGED_COGS" ]; then
            echo "Geen specifieke cogs gewijzigd; val terug op alle cogs."
            ALL=$(list_cogs)
            if [ -z "$ALL" ]; then
              echo "::error::Geen cogs gevonden in ${COG_BASE}/ (zoek naar mappen met __init__.py of info.json)"
              exit 1
            fi
            arr=$(printf '%s\n' $ALL | jq -R . | jq -s .)
            echo "matrix={\"cog_path\":$arr}" >> $GITHUB_OUTPUT
            echo "any_changed=false" >> $GITHUB_OUTPUT
          else
            arr=$(printf '%s\n' $CHANGED_COGS | jq -R . | jq -s .)
            echo "matrix={\"cog_path\":$arr}" >> $GITHUB_OUTPUT
            echo "any_changed=true" >> $GITHUB_OUTPUT
          fi

  qa:
    name: QA ${{ matrix.cog_path }}
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    env:
      COG_PATH: ${{ matrix.cog_path }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (tools + project)
        run: |
          python -m pip install --upgrade pip
          pip install ruff pyright bandit codespell pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff format (check)
        run: ruff format --check "$COG_PATH"

      - name: Ruff lint
        run: ruff check "$COG_PATH"

      - name: Type check (pyright)
        run: pyright "$COG_PATH"

      - name: Security scan (bandit)
        run: bandit -q -r "$COG_PATH"

      - name: Spelling (codespell)
        run: codespell "$COG_PATH" --quiet-level=2

      - name: Meta check
        run: python scripts/cog_meta_check.py "$COG_PATH"

      - name: Tests
        run: |
          if [ -d "$COG_PATH/tests" ]; then
            pytest -q "$COG_PATH/tests"
          else
            echo "Geen tests voor $COG_PATH; sla pytest over."
          fi
